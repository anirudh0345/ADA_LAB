#include <stdio.h>
#include <stdlib.h>
#include <time.h>  
int arr[10000];
void swap(int *a,int *b)
{
    int t = *a;
    *a = *b;
    *b = t;
}
int partition(int arr[], int low, int high)
{
    int pivot = arr[high];
    int i = (low-1);
    for(int j =low;j<high;j++)
    {
        if(arr[j] <= pivot)
        {
            i++;
            swap(&arr[i],&arr[j]);
        }
    }
   swap(&arr[i+1],&arr[high]);
   return (i+1);
}
  

void quickSort(int arr[], int low, int high)
{
    if (low < high) {
       
        int piv = partition(arr,low,high);
        quickSort(arr,low,piv-1);
        quickSort(arr,piv+1,high);
    }
}
  

int main()
{
    int arr_size;
    time_t start,end;
    printf("Enter array size: \n");
    scanf("%d",&arr_size);
    for(int d = 0;d<arr_size;d++)
    {
        arr[d] = arr_size-d-1;
    }
    start = clock();
    quickSort(arr, 0, arr_size - 1);
    end = clock();
    printf("Time taken to sort the array is %f",difftime(end,start));
    return 0;
}

