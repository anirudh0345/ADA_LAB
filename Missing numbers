*result_count = brr_count;
        int i,j;
        int d,e;
        int t;
        int y = 0;
        int flag;
        int k = brr_count;
        int c[brr_count];
        for (int h = 0; h < k; h++) {
            c[h] = 0;
        }
        int *a = malloc(k * sizeof(int));
        for (int i = 0; i < k; i++) {
            *(a) = 0;
        }
        for(i=0;i<brr_count;i++)
        {
            for(j=0;j<arr_count;j++)
            {
                if(brr[i]==arr[j])
                {
                    c[i] = 1;
                    arr[i] = -10000;
                    continue;
                }
                else 
                {
                    flag++;
                }
            }
        }
        for(int x=0;x<k;x++)
        {
            if(c[x] == 0)
            {
                a[y] = brr[x];
                y++;
            }
            else
            {
                flag++;
            }
        }
        for(d=0;d<k;d++)
        {
            for(e=0;e<k;e++)
            {
                if(a[e+1] < a[e])
                {
                    t = a[e];
                    a[e] = a[e+1];
                    a[e+1] = t;
                }
            }
        }
        return a;
