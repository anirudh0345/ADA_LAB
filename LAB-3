#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int binary_search(int arr[],int key,int low,int high)
{
	int k=0;
	int mid;
	mid =(low+high)/2;
	if(arr[mid] == key)
	{
			printf("Element %d found",key);
			return -1;
	}
	else if(low == high)
	{
		printf("Element %d not found",key);	
	}
	else if(arr[mid] > key)
	{
		while(k<1000)
		{
			k++;
		}
		high = mid;
		return binary_search(arr,key,low,high);   
	}
	else 
	{
		while(k<1000)
		{
			k++;
		}
		return binary_search(arr,key,low,high);   
	}
}



int main()
{	
	int N,i,Key;
	int high,low;
	int arr[5000];
	time_t start,end;
	printf("Binary search using recursion");
	printf("\nEnter the number of elements: ");
	scanf("%d",&N);
	for(i=0;i<N;i++)
	{
	   arr[i] = i;
	}
	i = 0;
	low = 0;
	high = N;
	printf("\nEnter the element to search: ");
	scanf("%d",&Key);
	start = clock();
	binary_search(arr,Key,low,high);
	end = clock();
	printf("Time taken to find element is %f",(difftime(end,start)));
	return 0;
}



#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int linear_search(int arr[],int j,int key,int Size)
{
	int k=0;
	if(arr[j] == key)
	{
			printf("Element %d found at position %d",key,j);
			return -1;
	}
	else if(j>=Size)
	{
		    printf("Element not found at");
			return -1;
	}
	else
	{
		while(k<1000)
		{
			k++;
		}
		   j=j+1;
		return linear_search(arr,j,key,Size);
	}
}

int main()
{	
	int N,i,Key;
	int arr[5000];
	time_t start,end;
	printf("Linear search using recursion");
	printf("\nEnter the number of elements: ");
	scanf("%d",&N);
	for(i=0;i<N;i++)
	{
	   arr[i] = i;
	}
	i = 0;
	printf("\nEnter the element to search: ");
	scanf("%d",&Key);
	start = clock();
	linear_search(arr,i,Key,N);
	end = clock();
	printf("\nTime taken to find element is %f",(difftime(end,start)));
	return 0;
}

 //selection sort
 
 #include <stdio.h>
#include <time.h>
#include <stdlib.h>

void selection_sort(int arr[], int n)
{
    int temp,min,i,j,k;
    k=0;
    for(i=0;i<n-1;i++)
    {
        min = i;
        for(j=i+1;j<n;j++)
        {
            if(arr[j]<arr[min])
            {
                min = j;
            }
            while(k<3000)
            {
                k++;
            }
            temp = arr[i];
            arr[i] = arr[min];
            arr[min] = temp;
        }
    }
}
int main()
{
    int n,i;
    int arr[10000];
    time_t start,end;
    printf("Enter number of elements: ");
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        arr[i] = rand();
    }
    start = clock();
	selection_sort(arr,n);
	end = clock();
	printf("Time taken to sort is %f",(difftime(end,start)));
	return 0; 
}



https://github.com/anirudh0345/ADA_LAB/issues/1#issue-1272587164

https://github.com/anirudh0345/ADA_LAB/issues/2
