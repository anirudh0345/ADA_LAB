//BFS to find all nodes reachable from a starting node


#include <stdio.h>
#include <stdlib.h>

int main()
{
    int arr[9][9];
    int choice;
    int size;
    int i,j,k,l,m,t,u;
    int visited[9];
    int neighbour[20];
    int flag = 0;
    printf("BFS method to find all nodes reachable from a starting node.\n");
    printf("Enter the size of the adjacency matrix(0-9)\n");
    scanf("%d",&size);
    printf("Enter the matrix elements(in 1's and 0's)");
    for(int i=0;i<size;i++)
    {
        for(int j=0;j<size;j++)
        {
            scanf("%d",&arr[i][j]);
        }
    }
    for(k=0;k<size;k++)
    {
        neighbour[k] = 0;
    }
    printf("Enter the node number to start from(0-9) ");
    scanf("%d",&choice);
    m = 0;
    for(l=0;l<size;l++)
    {
        if(arr[choice][l] == 1)
        {
            neighbour[m] = l;
            printf(" %d ",m);//These are immediate neighbours of selected node.
        }
        else{
            flag++;
        }
        m++;
    }
    for(t=0;t<size;t++)
    {
        if(neighbour[t] == 1)
        {
            for(u=0;u<size;u++)
            {
                if(arr[t][u]==1)
                {
                    printf(" %d ",u);
                }
                else
                {
                    flag++;
                }
            }
        }
         else
        {
            flag++;
        }
    }
    return 0;
}Output:
1 1 1 0 0
1 1 1 0 0
1 1 1 0 0
0 0 0 1 1
0 0 0 0 0
Node number :1
0 1 2

//DFS to find if graph connected or not


#include <stdio.h>
int visited[9];
int size;
int arr[9][9];
int stack[10];
int top = -1;
int j = 1;
int flag = 0;
void dfs(int v)
{
    visited[v]=1;
    stack[++top]=v;
    for(int i=1;i<=size;i++)
    {
        if(arr[v][i]==1 & !visited[i])
        {
            flag = 1;
            j++;
            dfs(i);
        }
    }
    if(flag==0)
    {
        for(int k=1;k<=size;k++)
    {
        if(arr[stack[top]][k]==1 & !visited[k])
        {
            flag = 1;
            j++;
            dfs(k);
        }
    }
    if(flag==0)
    {
        top--;
    }
    }
}
int main()
{
    printf("DFS to check whether a graph is connected or not");
    int v;
    printf("\nEnter the size of the adjacency matrix(0-9)\n");
    scanf("%d",&size);
    printf("Enter the matrix elements(in 1's and 0's)");
    for(int i=0;i<size;i++)
    {
        for(int j=0;j<size;j++)
        {
            scanf("%d",&arr[i][j]);
        }
    }
    for(int h=1;h<=size;h++)
    {
        visited[h] = 0;
    }
    dfs(1);
    if(j==size)
    {
        printf("\nGraph is connected");
    }
    else
    {
        printf("\nGraph is not connected");
    }
    
    return 0;
}

